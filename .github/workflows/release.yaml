name: Release

on:
  push:
    branches:
      - master

permissions:
  contents: write

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Elixir
        uses: erlef/setup-beam@v1
        with:
          elixir-version: '1.16'
          otp-version: '24'

      - name: Install dependencies
        run: mix deps.get

      - name: Run Credo linter
        run: mix credo --strict

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - uses: paulhatch/semantic-version@v5.3.0
        id: version

      - uses: softprops/action-gh-release@v2
        id: create_release
        with:
          generate_release_notes: "true"
          name: v${{ steps.version.outputs.version }}
          tag_name: v${{ steps.version.outputs.version }}
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Write version to file
        run: mkdir -p .release && echo "${{ steps.version.outputs.version }}" > .release/version

      - name: Commit and push version file
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add .release/version
          git commit -m "chore(release): update version to ${{ steps.version.outputs.version }} [ci skip]"
          git push

      - name: Build and push Docker images
        run: |
          docker buildx create --use
          docker buildx build --platform linux/amd64,linux/arm64 \
            -t ghcr.io/${{ github.repository }}:${{ steps.version.outputs.version  }} \
            -t ghcr.io/${{ github.repository }}:latest \
            --push .